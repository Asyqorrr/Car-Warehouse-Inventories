# -*- coding: utf-8 -*-
"""Capstone modul 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mt0TVDs7VSTUf4Hvdt67S6p1wNjvDTiN
"""

# ASYQOR THORIQ
# JCDSOL13

from tabulate import tabulate
from prettytable import PrettyTable
import re

data = {10001 : {'nama' : 'Avanza',
                 'merek' : 'Toyota',
                 'tipe' : 'Bensin',
                 'transmisi' : 'MT',
                 'warna' : 'Black',
                 'nopol' : 'B 1351 VGC',
                 'owner' : 'Raihan'},

        10002: {'nama' : 'Air EV',
                 'merek' : 'Wuling',
                 'tipe' : 'Elektrik',
                 'transmisi' : 'AT',
                 'warna' : 'White',
                 'nopol' : 'F 3893 AB',
                 'owner' : 'Rafly'},

        10003: {'nama' : 'Ionic',
                 'merek' : 'Hyundai',
                 'tipe' : 'Elektrik',
                 'transmisi' : 'AT',
                 'warna' : 'Grey',
                 'nopol' : 'D 7932 YXZ',
                 'owner' : 'Chlorinde'},

        10004: {'nama' : 'Ertiga',
                 'merek' : 'Suzuki',
                 'tipe' : 'Bensin',
                 'transmisi' : 'MT',
                 'warna' : 'White',
                 'nopol' : 'DK 9821 AT',
                 'owner' : 'Riki'},

        10005: {'nama' : '86',
                 'merek' : 'Toyota',
                 'tipe' : 'Bensin',
                 'transmisi' : 'AT',
                 'warna' : 'Blue',
                 'nopol' : 'B 8271 FK',
                 'owner' : 'Ferdian'},

        10006: {'nama' : 'Civic Type R',
                 'merek' : 'Honda',
                 'tipe' : 'Bensin',
                 'transmisi' : 'AT',
                 'warna' : 'Red',
                 'nopol' : 'B 4903 HT',
                 'owner' : 'Haryanto'},

        10007: {'nama' : 'Fortuner',
                 'merek' : 'Toyota',
                 'tipe' : 'Diesel',
                 'transmisi' : 'MT',
                 'warna' : 'Black',
                 'nopol' : 'D 9842 RUF',
                 'owner' : 'Kendrick'},

        10008: {'nama' : 'Pajero',
                 'merek' : 'Mitsubishi',
                 'tipe' : 'Diesel',
                 'transmisi' : 'MT',
                 'warna' : 'Grey',
                 'nopol' : 'D 5231 TY',
                 'owner' : 'Ricardo'},

        10009: {'nama' : 'Lancer GSR Evo',
                 'merek' : 'Mitsubishi',
                 'tipe' : 'Bensin',
                 'transmisi' : 'MT',
                 'warna' : 'Yellow',
                 'nopol' : 'F 9631 RK',
                 'owner' : 'Natalia'},

        10010: {'nama' : 'Galant VR4',
                 'merek' : 'Mitsubishi',
                 'tipe' : 'Bensin',
                 'transmisi' : 'AT',
                 'warna' : 'Black',
                 'nopol' : 'DK 9842 FDA',
                 'owner' : 'Fikri'},

        10011: {'nama' : 'Corolla Cross Hybrid',
                 'merek' : 'Toyota',
                 'tipe' : 'Hybrid',
                 'transmisi' : 'AT',
                 'warna' : 'White',
                 'nopol' : 'B 7729 RF',
                 'owner' : 'Bambang'},

        10012: {'nama' : 'Almaz Hybrid',
                 'merek' : 'Wuling',
                 'tipe' : 'Hybrid',
                 'transmisi' : 'AT',
                 'warna' : 'Black',
                 'nopol' : 'F 6271 TX',
                 'owner' : 'Ryan'},

        10013: {'nama' : 'Yaris Cross',
                 'merek' : 'Toyota',
                 'tipe' : 'Hybrid',
                 'transmisi' : 'AT',
                 'warna' : 'Blue',
                 'nopol' : 'B 9231 PW',
                 'owner' : 'Mikoto'},

        10014: {'nama' : 'Fortuner',
                 'merek' : 'Toyota',
                 'tipe' : 'Bensin',
                 'transmisi' : 'AT',
                 'warna' : 'White',
                 'nopol' : 'B 1421 HK',
                 'owner' : 'Raiden'},
        }

# ==================FUNGSI MEMUNCULKAN SEMUA DATA =============================

def show():
  x = PrettyTable()

  x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]
  for key, value in data.items():
    x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],value["warna"],value["nopol"],value["owner"]])
  print(x)

# ==================FUNGSI MENCARI DAN MEMUNCULKAN DATA BERDASARKAN ID =========

def find(id):
  if id <  listedKeyReversed(False) or id > listedKeyReversed(True):
    print("Id tidak ditemukan")

  else :

    x = PrettyTable()
    x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]

    for key, value in data.items():
      if key == id:
        x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],
                  value["warna"],value["nopol"],value["owner"]])
    print(x)

# ==================FUNGSI MENGAMBIL ID SEBAGAI LIST========================

def listedKeyReversed(Check):

  if Check == True :
    unikList = list(data.keys())
    unikList.sort(reverse=True)
    id = unikList[0]
    return id

  elif Check == False:
    unikList = list(data.keys())
    unikList.sort(reverse=False)
    id = unikList[0]
    return id

def nopolCheck(nomor):
  noSpace = nomor.replace(" ","")

  #------KODE KOTA
  kode = re.findall (r"[a-zA-Z]{1,}", noSpace)
  kodeKota = kode[0]


  #------3 KODE AKHIR
  kodeAkhir = kode[1]


  #------ANGKA
  angka = re.findall(r"\d{4}",noSpace)[0]
  angka = " " + angka + " "


  #------GABUNG SEMUA BAGIAN
  formatted = ""
  formatted+=kodeKota
  formatted+=angka
  formatted+= kodeAkhir

  return(formatted.upper())

# ==================FUNGSI MENAMBAHKAN/MEMBUAT DATA BARU =====================

def create():
  id = listedKeyReversed(True)

  while True:
    nama = input("Masukkan nama: ")
    merek = input("Masukkan merek: ")
    tipe = input("Masukkan tipe mobil: ")
    transmisi = input("Masukkan transmisi mobil: ")
    warna = input("Masukkan warna: ")
    nopol = input("Masukkan nomor polisi mobil: ")
    owner = input("Masukkan pemilik mobil: ")
    formattedNopol = nopolCheck(nopol)

    id+=1
    data[id] = {'nama' : nama.capitalize(), 'merek' : merek.capitalize(), 'tipe' : tipe.capitalize(), 'transmisi' : transmisi.upper() ,
                'warna' : warna.capitalize(), 'nopol' : formattedNopol.upper(), 'owner' : owner.capitalize()}
    return show()

# ==================FUNGSI MERUBAH DATA ====================================

def update():
  repeat = True
  while repeat:
    try:
      rubahId = int(input("Masukkan id yang ingin dirubah : "))

      for record in data:
        if rubahId in data:

          print("Pilih data yang ingin dirubah: ")
          print("1. Merubah Data Warna?: ")
          print("2. Merubah Data Nomor Polisi?: ")
          print("3. Merubah Data Pemilik?: ")
          print("4. Merubah Semua Data?: ")
          print("5. Kembali ke menu awal: ")

          try:
            pilih = int(input("Masukkan data apa yang ingin diubah: "))

            if pilih == 1:
              rubahWarna = input("Masukkan warna yang baru").capitalize()
              data[rubahId]['warna'] = rubahWarna

              return find(rubahId)
              break

            elif pilih == 2:
              rubahNopol = input("Masukkan nomor polisi yang baru: ")
              formattedNopol = nopolCheck(rubahNopol)
              data[rubahId]['nopol'] = formattedNopol

              return find(rubahId)
              break

            elif pilih == 3:
              rubahOwner = input("Masukkan pemilik yang baru: ").capitalize()
              data[rubahId]['owner'] = rubahOwner


              return find(rubahId)
              break

            elif pilih == 4:
              rubahNama = input("Masukkan nama mobil yang baru: ").capitalize()
              data[rubahId]['nama'] = rubahNama


              rubahMerek = input("Masukkan merek yang baru: ").capitalize()
              data[rubahId]['merek'] = rubahMerek


              rubahTipe = input("Masukkan tipe yang baru: ").capitalize()
              data[rubahId]['tipe'] = rubahTipe


              rubahTransmisi = input("Masukkan transmisi yang baru: ").capitalize()
              data[rubahId]['transmisi'] = rubahTransmisi


              rubahWarna = input("Masukkan warna yang baru: ").capitalize()
              data[rubahId]['warna'] = rubahWarna


              rubahNopol = input("Masukkan nomor polisi yang baru: ").capitalize()
              data[rubahId]['nopol'] = rubahNopol

              rubahOwner = input("Masukkan pemilik yang baru: ").capitalize()
              data[rubahId]['owner'] = rubahOwner


              return find(rubahId)
              break

            else:
              print("Nomor yang anda masukkan salah")


          except Exception:
            print("Input salah, tolong masukkan nomor pilihan!\n")


        else :
          print("data tidak ditemukan")
          repeat = False
          break

    except Exception:
      print("Masukkan id dalam bentuk angka!")

# ==================FUNGSI MENCARI DATA ==================================

def search():
  while True:
    print("\ncari data berdasarkan :")
    print("1. Nama ")
    print("2. Merek ")
    print("3. Tipe ")
    print("4. Transmisi ")
    print("5. Warna ")
    print("6. Nopol ")
    print("7. Pemilik ")

    try :
      pilih = int(input("Cari berdasarkan :"))

      if pilih == 1 :
          x = PrettyTable()
          filterNama = input("Masukkan nama mobil :")

          if filterNama in getNama():

            x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]


            for key, value in data.items():
                if value["nama"] == filterNama:
                  x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],
                            value["warna"],value["nopol"],value["owner"]])
            print(x)
            break

          else:
            print("\nNama mobil tidak ada di data")


      elif pilih == 2 :
          x = PrettyTable()
          filterMerek = input("\nMasukkan merek mobil: ")

          if filterMerek in getMerk():
                x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]

                for key, value in data.items():
                  if value["merek"] == filterMerek:
                    x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],
                              value["warna"],value["nopol"],value["owner"]])
                print(x)
                break

          else:
            print("\nMerek mobil tidak ada di data")



      elif pilih == 3 :
          x = PrettyTable()
          filterTipe = input("\nMasukkan tipe mobil (Bensin/Elektrik/Hybrid): ")

          if filterTipe in getTipe():

              x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]

              for key, value in data.items():
                if value["tipe"] == filterTipe:
                  x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],
                            value["warna"],value["nopol"],value["owner"]])
              print(x)
              break

          else:
            print("\nTipe yang di input tidak ada di data")



      elif pilih == 4 :
          x = PrettyTable()
          filterTransmisi = input("Masukkan transmisi mobil (MT/AT): ")

          if filterTransmisi in getTransmisi():

            x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]

            for key, value in data.items():
              if value["transmisi"] == filterTransmisi:
                x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],
                          value["warna"],value["nopol"],value["owner"]])
            print(x)
            break

          else:
            print("\nTransmisi yang di input tidak ada di data")



      elif pilih == 5 :
          x = PrettyTable()
          filterWarna = input("Masukkan warna mobil: ")

          if filterWarna in getWarna():

            x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]

            for key, value in data.items():
              if value["warna"] == filterWarna:
                x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],
                          value["warna"],value["nopol"],value["owner"]])
            print(x)
            break

          else:
            print("\nTidak ada mobil yang mempunyai warna tersebut")


      elif pilih == 6 :
          x = PrettyTable()
          filterNopol = input("Masukkan nomor polisi mobil: ")

          if filterNopol in getNopol():

            x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]

            for key, value in data.items():
              if value["nopol"] == filterNopol:
                x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],
                          value["warna"],value["nopol"],value["owner"]])
            print(x)
            break

          else:
            print("\nNomor polisi yang di input tidak ada di data")



      elif pilih == 7 :
        x = PrettyTable()
        filterOwner = input("Masukkan pemilik mobil: ")

        if filterOwner in getOwner():
            x.field_names = ["Id", "Nama", "Merek", "Tipe", "Transmisi", "Warna", "Nopol", "Pemilik"]

            for key, value in data.items():
              if value["owner"] == filterOwner:
                x.add_row([key, value["nama"], value["merek"], value["tipe"],value["transmisi"],
                          value["warna"],value["nopol"],value["owner"]])
            print(x)
            break

        else:
          print("Pemilik yang di input tidak ada di data")


      else:
        print("\nTolong masukkan pilihan yang benar")


    except Exception:
      print("\nInput salah, tolong masukkan nomor pilihan!")

# ==================FUNGSI UNTUK AMBIL MASING MASING ATRIBUT==================

def getNama():

  listedNama = []
  for key, value in data.items():
    for key,value in value.items():
      if key == "nama":
        listedNama.append(value)

  return set(listedNama)

def getMerk():

  listedMerek = []
  for key, value in data.items():
    for key,value in value.items():
      if key == "merek":
        listedMerek.append(value)

  return set(listedMerek)

def getTipe():

  listedTipe = []
  for key, value in data.items():
    for key,value in value.items():
      if key == "tipe":
        listedTipe.append(value)

  return set(listedTipe)

def getWarna():

  listedWarna = []
  for key, value in data.items():
    for key,value in value.items():
      if key == "warna":
        listedWarna.append(value)

  return set(listedWarna)

def getNopol():

  listedNopol = []
  for key, value in data.items():
    for key,value in value.items():
      if key == "nopol":
        listedNopol.append(value)

  return set(listedNopol)

def getOwner():

  listedOwner = []
  for key, value in data.items():
    for key,value in value.items():
      if key == "owner":
        listedOwner.append(value)

  return set(listedOwner)

def getTransmisi():

  listedTransmisi = []
  for key, value in data.items():
    for key,value in value.items():
      if key == "transmisi":
        listedTransmisi.append(value)

  return set(listedTransmisi)

# ==================FUNGSI UNTUK MENGHAPUS DATA BERDASARKAN ID=================

def delete() :

  print("Menghapus data berdasarkan Id")
  hapusData = int(input("Masukkan id data : "))


  if hapusData in data:
    del data[hapusData]

    print(f"Id {hapusData} berhasil dihapus")
    show()

  else:
    print("id tidak ditemukan")

#==================FUNGSI UNTUK MENJALANKAN PROGRAM DAN MUNCULKAN MENU=========
def menu():
  while True:
    print("\n==============APLIKASI PENDATAAN WAREHOUSE MOBIL==========================")
    print("Pilih Menu")
    print("1. Munculkan semua data")
    print("2. Cari data")
    print("3. Tambah data")
    print("4. Update/Edit data")
    print("5. Hapus data")

    try:
      pilihMenu = int(input("Masukkan nomor pilihan menu: "))
#------------------------------------------
      if pilihMenu == 1 :
              show()

              back = input("Apakah ingin kembali ke menu awal? (y/n)").upper()

              if back == 'Y':
                continue

              elif back == 'N':
                break

              else:
                print("\ninput anda salah!")
                break

#------------------------------------------
      elif pilihMenu == 2 :
            search()

            back = input("Apakah ingin kembali ke menu awal? (y/n)").upper()

            if back == 'Y':
              continue

            elif back == 'N':
              break

            else:
              print("\ninput anda salah!")
              break

#------------------------------------------
      elif pilihMenu == 3 :
            create()

            back = input("Apakah ingin kembali ke menu awal? (y/n)").upper()

            if back == 'Y':
              continue

            elif back == 'N':
              break

            else:
              print("\ninput anda salah!")
              break

#------------------------------------------
      elif pilihMenu == 4 :
        update()

        back = input("Apakah ingin kembali ke menu awal? (y/n)").upper()

        if back == 'Y':
          continue

        elif back == 'N':
          break

        else:
          print("\ninput anda salah!")
          break

#------------------------------------------
      elif pilihMenu == 5 :
        delete()

        back = input("Apakah ingin kembali ke menu awal? (y/n)").upper()

        if back == 'Y':
          continue

        elif back == 'N':
          break

        else:
          print("\ninput anda salah!")
          break

#------------------------------------------
      else:
        print("Input tidak ada dalam pilihan!")



    except Exception :
      print("\n\nInput salah, masukkan input angka!")

menu()